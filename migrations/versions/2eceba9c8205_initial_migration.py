"""Initial migration

Revision ID: 2eceba9c8205
Revises: 
Create Date: 2024-04-22 14:54:37.755535

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2eceba9c8205'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('complaint',
    sa.Column('complaint_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=30), nullable=True),
    sa.Column('description', sa.String(length=250), nullable=True),
    sa.Column('severity', sa.String(length=30), nullable=True),
    sa.Column('status', sa.String(length=30), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('complaint_id')
    )
    op.create_table('request',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=30), nullable=True),
    sa.Column('description', sa.String(length=250), nullable=True),
    sa.Column('severity', sa.String(length=30), nullable=True),
    sa.Column('status', sa.String(length=30), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tenant',
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=30), nullable=False),
    sa.Column('last_name', sa.String(length=30), nullable=False),
    sa.Column('email', sa.String(length=40), nullable=False),
    sa.Column('phone_number', sa.String(length=40), nullable=False),
    sa.PrimaryKeyConstraint('tenant_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone_number')
    )
    op.create_table('user',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=40), nullable=False),
    sa.Column('username', sa.String(length=30), nullable=False),
    sa.Column('password_hash', sa.String(length=16), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('apartment',
    sa.Column('apartment_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.Column('description', sa.String(length=250), nullable=False),
    sa.Column('rent_amount', sa.Integer(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.tenant_id'], ),
    sa.PrimaryKeyConstraint('apartment_id')
    )
    op.create_table('notification',
    sa.Column('notification_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('notification_type', sa.String(length=30), nullable=True),
    sa.Column('details', sa.String(length=250), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('request_id', sa.Integer(), nullable=True),
    sa.Column('complaint_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['complaint_id'], ['complaint.complaint_id'], ),
    sa.ForeignKeyConstraint(['request_id'], ['request.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('notification_id')
    )
    op.create_table('payment',
    sa.Column('payment_id', sa.Integer(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Integer(), nullable=True),
    sa.Column('date_paid', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('status', sa.String(length=30), nullable=True),
    sa.Column('payment_type', sa.String(length=30), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.tenant_id'], ),
    sa.PrimaryKeyConstraint('payment_id')
    )
    op.create_table('payment_status',
    sa.Column('payment_status_id', sa.Integer(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('payment_date', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('status', sa.String(length=30), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.tenant_id'], ),
    sa.PrimaryKeyConstraint('payment_status_id')
    )
    op.create_table('reminder',
    sa.Column('reminder_id', sa.Integer(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('reminder_date', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('status', sa.String(length=30), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.tenant_id'], ),
    sa.PrimaryKeyConstraint('reminder_id')
    )
    op.create_table('apartment_details',
    sa.Column('apartment_details_id', sa.Integer(), nullable=False),
    sa.Column('apartment_id', sa.Integer(), nullable=True),
    sa.Column('bedrooms', sa.Integer(), nullable=True),
    sa.Column('bathrooms', sa.Integer(), nullable=True),
    sa.Column('amenities', sa.String(length=250), nullable=True),
    sa.ForeignKeyConstraint(['apartment_id'], ['apartment.apartment_id'], ),
    sa.PrimaryKeyConstraint('apartment_details_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('apartment_details')
    op.drop_table('reminder')
    op.drop_table('payment_status')
    op.drop_table('payment')
    op.drop_table('notification')
    op.drop_table('apartment')
    op.drop_table('user')
    op.drop_table('tenant')
    op.drop_table('request')
    op.drop_table('complaint')
    # ### end Alembic commands ###
